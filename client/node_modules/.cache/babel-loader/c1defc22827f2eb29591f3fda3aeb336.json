{"ast":null,"code":"var _jsxFileName = \"/Users/silicontechlab/Documents/Gajanan/react/tasktodo/src/components/taskDetails/TaskDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './styles.css';\nimport styled from 'styled-components';\nimport { request } from '../../utils/api-utils';\nimport { getToken } from '../../utils/user-utils';\nimport Modal from '../modal/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AppCard = styled.div`\n    background: #fff;\n    padding: 20px 20px;\n    transition: 0.5s all ease-out;\n    filter: drop-shadow(0 0 1px #ccc);\n    border-radius: 10px;\n    height: auto;\n`;\n_c = AppCard;\nconst TaskList = styled.ul`\n    margin: 0;\n    padding: 0;\n    list-style: none;\n`;\n_c2 = TaskList;\nconst ListItem = styled.li`\n    padding: 15px 0;\n    border-top: 1px solid #eee;\n    :first-of-type {\n        border-top: none;\n    }\n`;\n_c3 = ListItem;\n\nconst TaskDetails = props => {\n  _s();\n\n  const {\n    title\n  } = props;\n  const [tasks, setTasks] = useState([]);\n  const [show, setShowModal] = useState(false);\n  const [taskName, setTaskName] = useState('');\n  const [isEdit, setIsEdit] = useState(false);\n  const [editId, setEditId] = useState('');\n  useEffect(() => {\n    getTaskLists();\n  }, []);\n\n  const showModal = () => {\n    setShowModal(true);\n  };\n\n  const hideModal = () => {\n    setShowModal(false);\n  };\n\n  const getTaskLists = () => {\n    request.get('/tasks', {\n      headers: {\n        'x-auth-token': getToken()\n      }\n    }).then(response => {\n      if (response) {\n        if (response.data.status === false) {\n          console.log(response.data.message);\n          return;\n        }\n\n        setTasks(response.data);\n      }\n    }).catch(error => {\n      if (error) {\n        console.log(error);\n      }\n    });\n  };\n\n  const saveTask = e => {\n    const header = {\n      headers: {\n        'x-auth-token': getToken()\n      }\n    };\n\n    if (isEdit) {\n      updateTask(editId, taskName, false);\n      hideModal();\n    } else {\n      request.post(`/tasks`, {\n        name: taskName,\n        completed: false\n      }, header).then(response => {\n        if (response.data.status === false) {\n          alert(response.data.message);\n          return;\n        }\n\n        hideModal();\n        getTaskLists();\n        props.getDashboardData();\n      }).catch(error => {\n        if (error) {\n          console.log(error);\n        }\n      });\n    }\n\n    e.preventDefault();\n  };\n\n  const updateTask = (id, name, completed) => {\n    //console.log(id, name);return;\n    const header = {\n      headers: {\n        'x-auth-token': getToken()\n      }\n    };\n    request.put(`/tasks/${id}`, {\n      name: name,\n      completed: completed\n    }, header).then(response => {\n      if (response.data.status === false) {\n        alert(response.data.message);\n        return;\n      }\n\n      getTaskLists();\n      props.getDashboardData();\n    }).catch(error => {\n      if (error) {\n        console.log(error);\n      }\n    });\n  };\n\n  const deleteTask = id => {};\n\n  const editTask = (id, name, completed) => {\n    setTaskName(name);\n    setIsEdit(true);\n    setEditId(id);\n    showModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"clear\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary right\",\n        onClick: showModal,\n        children: \"+ New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-style search-input right\",\n        placeholder: \"Search by task name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AppCard, {\n        children: /*#__PURE__*/_jsxDEV(TaskList, {\n          children: tasks.map((task, index) => task.completed ? /*#__PURE__*/_jsxDEV(ListItem, {\n            className: \"clear\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: true,\n                readOnly: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"del\", {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flat-btn\",\n                type: \"button\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"material-icons  text-light-gray\",\n                  children: \"edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flat-btn\",\n                type: \"button\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"material-icons  text-light-gray\",\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 46\n          }, this) : /*#__PURE__*/_jsxDEV(ListItem, {\n            className: \"clear\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                value: task._id,\n                onChange: e => {\n                  updateTask(e.target.value, task.name, true);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"right\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flat-btn\",\n                type: \"button\",\n                onClick: () => editTask(task._id, task.name, false),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"material-icons text-gray\",\n                  children: \"edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flat-btn\",\n                type: \"button\",\n                onClick: () => deleteTask(task._id),\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"material-icons text-gray\",\n                  children: \"delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 43\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      handleClose: hideModal,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: isEdit ? 'Update Task' : ' New Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          saveTask(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: e => setTaskName(e.target.value),\n            value: taskName,\n            type: \"text\",\n            className: \"input-style\",\n            placeholder: \"Task Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-expand no-pad\",\n            children: [\" \", isEdit ? 'Update Task' : '+ New Task']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TaskDetails, \"QyyHWLzSvR+YTG4ibQkA4ZVPgz0=\");\n\n_c4 = TaskDetails;\nexport default TaskDetails;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"AppCard\");\n$RefreshReg$(_c2, \"TaskList\");\n$RefreshReg$(_c3, \"ListItem\");\n$RefreshReg$(_c4, \"TaskDetails\");","map":{"version":3,"sources":["/Users/silicontechlab/Documents/Gajanan/react/tasktodo/src/components/taskDetails/TaskDetails.js"],"names":["React","useEffect","useState","styled","request","getToken","Modal","AppCard","div","TaskList","ul","ListItem","li","TaskDetails","props","title","tasks","setTasks","show","setShowModal","taskName","setTaskName","isEdit","setIsEdit","editId","setEditId","getTaskLists","showModal","hideModal","get","headers","then","response","data","status","console","log","message","catch","error","saveTask","e","header","updateTask","post","name","completed","alert","getDashboardData","preventDefault","id","put","deleteTask","editTask","map","task","index","_id","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './styles.css';\nimport styled from 'styled-components';\nimport { request } from '../../utils/api-utils';\nimport { getToken } from '../../utils/user-utils';\nimport Modal from '../modal/Modal';\nconst AppCard = styled.div`\n    background: #fff;\n    padding: 20px 20px;\n    transition: 0.5s all ease-out;\n    filter: drop-shadow(0 0 1px #ccc);\n    border-radius: 10px;\n    height: auto;\n`;\nconst TaskList = styled.ul`\n    margin: 0;\n    padding: 0;\n    list-style: none;\n`;\nconst ListItem = styled.li`\n    padding: 15px 0;\n    border-top: 1px solid #eee;\n    :first-of-type {\n        border-top: none;\n    }\n`;\nconst TaskDetails = (props) => {\n    const {title} = props\n    const [tasks, setTasks] = useState([])\n    const [show, setShowModal] = useState(false)\n    const [taskName, setTaskName] = useState('')\n    const [isEdit, setIsEdit] = useState(false);\n    const [editId, setEditId] = useState('');\n\n    useEffect(() => {\n        getTaskLists();\n    },[])\n\n    const showModal = () => {\n        setShowModal(true);\n    }\n    \n    const hideModal = () => {\n        setShowModal(false);\n    }\n\n    const getTaskLists = () => {\n        request.get('/tasks', {headers: { 'x-auth-token': getToken() }})\n        .then((response) => {\n            if(response) {\n                if(response.data.status === false) {\n                    console.log(response.data.message);\n                    return;\n                }\n                setTasks(response.data);\n            }\n        })\n        .catch(error => {\n            if(error) {\n                console.log(error);\n            }\n        })\n    }\n\n    const saveTask = (e) => {\n        const header = {\n            headers: { 'x-auth-token': getToken() }\n        }\n        if(isEdit) {\n            updateTask(editId, taskName, false);\n            hideModal()\n        } else {\n            request.post(`/tasks`, {\n                name: taskName,\n                completed: false\n            }, header)\n            .then((response) => {\n                if(response.data.status === false) {\n                    alert(response.data.message);\n                    return;\n                }\n                hideModal()\n                getTaskLists()\n                props.getDashboardData();\n            })\n            .catch(error => {\n                 if(error) {\n                     console.log(error);\n                 }\n            })\n        }\n        \n        e.preventDefault();\n    }\n\n    const updateTask = (id, name, completed) => {\n        //console.log(id, name);return;\n        const header = {\n            headers: { 'x-auth-token': getToken() }\n        }\n        request.put(`/tasks/${id}`, {\n            name: name,\n            completed: completed\n        }, header)\n        .then((response) => {\n            if(response.data.status === false) {\n                alert(response.data.message);\n                return;\n            }\n            getTaskLists()\n            props.getDashboardData();\n        })\n        .catch(error => {\n            if(error) {\n                console.log(error);\n            }\n        })\n    }\n\n    const deleteTask = (id) => {\n\n    }\n\n    const editTask = (id, name, completed) => {\n        setTaskName(name);\n        setIsEdit(true);\n        setEditId(id);\n        showModal();\n    }\n\n    return <>\n        <div className=\"clear\">\n            <div className=\"left\"><h3 className=\"title\">{title}</h3></div>\n            <button type=\"button\" className=\"btn btn-primary right\" onClick={showModal}>\n                + New Task\n            </button>\n            <input className=\"input-style search-input right\" placeholder=\"Search by task name\"></input>\n        </div>\n        <div>\n            <AppCard>\n                <TaskList>\n                    {\n                        tasks.map((task, index) => (\n                           (task.completed ? <ListItem className=\"clear\" key={index}>\n                                    <label className=\"left\">\n                                        <input type=\"checkbox\" checked readOnly/>\n                                        <del>{task.name}</del>\n                                    </label>\n                                    <div className=\"right\">\n                                        <button className=\"flat-btn\" type=\"button\">\n                                            <span className=\"material-icons  text-light-gray\">edit</span>    \n                                        </button>\n                                        <button className=\"flat-btn\" type=\"button\">\n                                            <span className=\"material-icons  text-light-gray\">delete</span>\n                                        </button>\n                                    </div>\n                            </ListItem> : <ListItem className=\"clear\" key={index}>\n                                <label className=\"left\">\n                                    <input type=\"checkbox\" value={task._id} onChange={(e) => {updateTask(e.target.value, task.name, true)}} />\n                                    <span>{task.name}</span>\n                                </label>\n                                <div className=\"right\">\n                                    <button className=\"flat-btn\" type=\"button\" onClick={() => editTask(task._id, task.name, false)}>\n                                        <span className=\"material-icons text-gray\">edit</span>    \n                                    </button>\n                                    <button className=\"flat-btn\" type=\"button\" onClick={() => deleteTask(task._id)}>\n                                        <span className=\"material-icons text-gray\">delete</span>\n                                    </button>\n                                </div>\n                            </ListItem>)\n                        ))\n                    }\n                </TaskList>\n            </AppCard>\n        </div>\n        <Modal show={show} handleClose={hideModal}>\n            <h3 className=\"title\">\n                { isEdit ? 'Update Task' : ' New Task' }\n            </h3>\n            <form onSubmit={e => {saveTask(e)}}>\n                <div className=\"form-group\">\n                    <input \n                        onChange={(e) => setTaskName(e.target.value)} \n                        value={taskName} \n                        type=\"text\" \n                        className=\"input-style\" \n                        placeholder=\"Task Name\" \n                    />\n                </div>\n                <div className=\"form-group\">\n                    <button className=\"btn btn-primary btn-expand no-pad\"> { isEdit ? 'Update Task' : '+ New Task' }</button>\n                </div>\n            </form>\n        </Modal>\n    </>\n}\n\nexport default TaskDetails;"]},"metadata":{},"sourceType":"module"}