{"ast":null,"code":"var _jsxFileName = \"/Users/silicontechlab/Documents/Gajanan/react/tasktodo/src/screens/dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TaskCard from '../../components/card/TaskCard';\nimport Header from '../../components/header/Header';\nimport TaskDetails from '../../components/taskDetails/TaskDetails';\nimport { request } from \"../../utils/api-utils\";\nimport { getToken } from \"../../utils/user-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [dashboardData, setDashboardData] = useState({});\n  useEffect(() => {\n    getDashboardData();\n  }, []);\n\n  const getDashboardData = () => {\n    request.get(`/dashboard`, {\n      headers: {\n        'x-auth-token': getToken()\n      }\n    }).then(response => {\n      if (response) {\n        if (response.data.status === false) {\n          console.log(response.data.message);\n          return;\n        }\n\n        setDashboardData(response.data);\n      }\n    }).catch(error => {\n      if (error) {\n        console.log(error);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [dashboardData.totalTasks < 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row clear\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: /*#__PURE__*/_jsxDEV(TaskCard, {\n                title: \"Task Completed\",\n                type: \"TASK_COUNTER\",\n                dashboardData: dashboardData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: /*#__PURE__*/_jsxDEV(TaskCard, {\n                title: \"Latest Created Tasks\",\n                type: \"TASK_LIST\",\n                dashboardData: dashboardData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: /*#__PURE__*/_jsxDEV(TaskCard, {\n                type: \"TASK_CHART\",\n                dashboardData: dashboardData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          style: {\n            paddingTop: '20px'\n          },\n          children: /*#__PURE__*/_jsxDEV(TaskDetails, {\n            title: \"Tasks\",\n            getDashboardData: getDashboardData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Dashboard, \"BKBrUuPF6EOOa6LBSEntQfs71sA=\");\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/silicontechlab/Documents/Gajanan/react/tasktodo/src/screens/dashboard/Dashboard.js"],"names":["React","useEffect","useState","TaskCard","Header","TaskDetails","request","getToken","Dashboard","dashboardData","setDashboardData","getDashboardData","get","headers","then","response","data","status","console","log","message","catch","error","totalTasks","paddingTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;;;AACA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,gBAAgB;AACnB,GAFQ,EAEP,EAFO,CAAT;;AAIA,QAAMA,gBAAgB,GAAG,MAAM;AAC3BL,IAAAA,OAAO,CAACM,GAAR,CAAa,YAAb,EAA0B;AAACC,MAAAA,OAAO,EAAE;AAAE,wBAAgBN,QAAQ;AAA1B;AAAV,KAA1B,EACCO,IADD,CACOC,QAAD,IAAc;AAChB,UAAGA,QAAH,EAAa;AACT,YAAGA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,KAA5B,EAAmC;AAC/BC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcI,OAA1B;AACA;AACH;;AACDV,QAAAA,gBAAgB,CAACK,QAAQ,CAACC,IAAV,CAAhB;AACH;AACJ,KATD,EAUCK,KAVD,CAUOC,KAAK,IAAI;AACZ,UAAGA,KAAH,EAAU;AACNJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH;AACJ,KAdD;AAeH,GAhBD;;AAkBA,sBAAO;AAAA,4BACH,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADG,eAEH;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,mBAEQb,aAAa,CAACc,UAAd,GAA2B,CAA3B,gBAA+B;AAAA,iCAC3B;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,qCACI,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAC,gBAAhB;AAAiC,gBAAA,IAAI,EAAC,cAAtC;AAAqD,gBAAA,aAAa,EAAEd;AAApE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,qCACI,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAC,sBAAhB;AAAuC,gBAAA,IAAI,EAAC,WAA5C;AAAwD,gBAAA,aAAa,EAAEA;AAAvE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,qCACI,QAAC,QAAD;AAAU,gBAAA,IAAI,EAAC,YAAf;AAA4B,gBAAA,aAAa,EAAEA;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAD2B,yBAA/B,gBAYM,qCAdd,eAgBI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAqB,UAAA,KAAK,EAAE;AAACe,YAAAA,UAAU,EAAC;AAAZ,WAA5B;AAAA,iCACI,QAAC,WAAD;AAAa,YAAA,KAAK,EAAC,OAAnB;AAA2B,YAAA,gBAAgB,EAAEb;AAA7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAyBH,CAjDD;;GAAMH,S;;KAAAA,S;AAmDN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TaskCard from '../../components/card/TaskCard';\nimport Header from '../../components/header/Header';\nimport TaskDetails from '../../components/taskDetails/TaskDetails';\nimport { request } from \"../../utils/api-utils\";\nimport { getToken } from \"../../utils/user-utils\";\nconst Dashboard = () => {\n    const [dashboardData, setDashboardData] = useState({})\n    useEffect(() => {\n        getDashboardData();\n    },[])\n\n    const getDashboardData = () => {\n        request.get(`/dashboard`, {headers: { 'x-auth-token': getToken() }})\n        .then((response) => {\n            if(response) {\n                if(response.data.status === false) {\n                    console.log(response.data.message);\n                    return;\n                }\n                setDashboardData(response.data);\n            }\n        })\n        .catch(error => {\n            if(error) {\n                console.log(error);\n            }\n        })\n    }\n\n    return <div>\n        <Header />\n        <div className=\"section\">\n            <div className=\"container\">\n                {\n                    dashboardData.totalTasks < 0 ? <>\n                        <div className=\"row clear\">\n                            <div className=\"col-3\">\n                                <TaskCard title=\"Task Completed\" type=\"TASK_COUNTER\" dashboardData={dashboardData} />\n                            </div>\n                            <div className=\"col-3\">\n                                <TaskCard title=\"Latest Created Tasks\" type=\"TASK_LIST\" dashboardData={dashboardData} />  \n                            </div>\n                            <div className=\"col-3\">\n                                <TaskCard type=\"TASK_CHART\" dashboardData={dashboardData} />\n                            </div>\n                        </div>\n                    </> : <></>\n                }\n                <div className=\"row\" style={{paddingTop:'20px'}}>\n                    <TaskDetails title=\"Tasks\" getDashboardData={getDashboardData} />\n                </div>\n            </div>\n        </div>        \n    </div>\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}